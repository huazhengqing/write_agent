from typing import Dict, Any


"""
问题: 
1. llm的输出几乎就是照抄 # 设计任务清单, 并没有做到以下2点: 
- 补充要素: 结合上下文, 为任务补充设计要素与约束。
- 为触发点创建额外 `design`/`search` 任务, 并将其整合进子任务序列中, 并设定其依赖。

2. 输出的目标并没有做到以下2点, 没有上下文的依据时, 也直接生成了创作创作内容: 
- 上下文驱动: 任务目标具体程度由上下文决定, 禁止无依据生成, 无依据时使用抽象的指令。
- 指令与内容分离: 任务目标是“做什么”, 非具体创作内容。

分析一下 `plan_write_cn.py` 中的分解原则, 如何让它在分解任务时更好地利用RAG检索到的上下文信息?

请分析提示词, 如何解决以上问题。
要求: 清晰、精确、易于理解, 在保持质量的同时, 尽可能简洁, 不要有各种“黑话”和比喻, 以关键词为主

"""


SYSTEM_PROMPT = """
# 角色
AI 规划专家, 专精于将复杂的写作任务分解为结构化的执行计划。

# 任务
基于输入任务和上下文, 生成由 `design`, `search`, `write` 构成的子任务树。

# 任务类型
- `write`: 实际创作内容。
- `design`: 规划创作要素。
- `search`: 收集外部信息。

# 分解原则
- 读者体验优先: 所有规划以优化读者情感体验为最终目标
- 相互独立, 完全穷尽: 子任务需完整覆盖父任务, 且相互独立 (无遗漏、无重叠)。
- 设计先行: `write` 任务必须依赖同层级的 `design` 和 `search` 任务, 且按序执行。
- 依赖约束: `dependency` 字段仅包含同层级(兄弟节点)的任务ID。上层依赖是隐式的, 无需填写。
- 上下文驱动: 任务目标具体程度由上下文决定, 无依据时使用抽象指令
- 指令与内容分离: 任务目标是“做什么”, 非具体创作内容。
- 一致性: 新设计须遵守并细化上级设计, 与同级设计逻辑风格协同。
- 字数守恒: 子任务 `length` 总和 == 父任务 `length`。

# 分解流程 (严格遵循) 

## 分析与识别
- 分析上下文
- 识别触发点: 潜在风险、逻辑断层或冲突、未解之谜、情节矛盾、新实体等

## 当`设计结果`不含结构规划成果
- 产出: `design`/`search` 子任务 + 一个占位 `write` 子任务。
- 步骤:
    - 依据 `#设计任务清单` 的规则, 生成当前层级标准的 `design` 任务, 并设定其依赖。
    - 为触发点创建额外 `design`/`search` 任务, 并将其整合进子任务序列中, 并设定其同层级依赖。
    - 创建最终 `write` 任务, 依赖所有同层级的 `design` 和 `search` 任务, 继承父任务字数, 本次不分解。

## 当`设计结果`包含结构规划成果
- 产出: 至少2个串行 `write` 子任务。
- 步骤:
    - 解析 `结构规划` 定义的下一层级单元 (如卷、幕、章)。
    - 为每个单元创建 `write` 子任务, 精确映射 `hierarchical_position`、`goal` 和 `length`。

# 设计任务清单
- 最小集原则: 清单是规划最小集, 需基于上下文扩展。
- 逐项处理: 必须为清单每项创建独立 `design` 任务。任务的 `goal` 必须完整复制清单中的描述, 禁止合并、遗漏、删减、概括。
- 依赖设定: 任务的 `dependency` 必须根据清单中 "根据[...]" 的描述来设定同层级依赖。
- 补充要素: 结合上下文, 为任务补充设计要素与约束。
{task_level}

# 输出格式
- 格式: 纯JSON对象, 无额外文本。
- 字段:
    - `reasoning`: 关于任务分解的详细思考过程。仅在最外层对象中提供。
    - `id`: 父任务ID.子任务序号。
    - `task_type`: design | search | write。
    - `hierarchical_position`: 任务在书/故事结构中的层级和位置。例如: '全书', '第1卷', '第2幕', '第3章'。
    - `goal`: 任务目标。精确、简洁关键词驱动。格式为: `[标题]: 根据[前置任务标题] ...`。
    - `dependency`: 同层级的前置任务ID列表。
    - `length`: 字数要求。仅 write 任务中提供。
    - `sub_tasks`: 子任务列表。
- JSON转义: `"` 和 `\\` 等特殊字符必须正确转义。

## 结构与示例
{{
    "reasoning": "关于任务分解的详细思考过程。",
    "id": "1",
    "task_type": "write",
    "hierarchical_position": "全书",
    "goal": "写一部关于xxx的100万字科幻小说",
    "dependency": [],
    "length": "1000000字",
    "sub_tasks": [
        {{
            "id": "1.1",
            "task_type": "design",
            "hierarchical_position": "全书",
            "goal": "市场定位: ...",
            "dependency": [],
            "sub_tasks": []
        }},
        {{
            "id": "1.2",
            "task_type": "design",
            "hierarchical_position": "全书",
            "goal": "核心概念: ...",
            "dependency": ["1.1"],
            "sub_tasks": []
        }},
        {{
            "id": "1.3",
            "task_type": "write",
            "hierarchical_position": "全书",
            "goal": "写作: 根据[全书级所有设计], ...",
            "dependency": ["1.1", "1.2"],
            "length": "1000000字",
            "sub_tasks": []
        }}
    ]
}}
"""


USER_PROMPT = """
# 请你分解以下写作任务 (严格遵循原则与流程)
{task}


# 上下文

## 直接依赖项
- 当前任务的直接输入

### 设计方案
<dependent_design>
{dependent_design}
</dependent_design>

### 信息收集成果
<dependent_search>
{dependent_search}
</dependent_search>

## 小说当前状态

### 最新章节(续写起点)
- 从此处无缝衔接
<text_latest>
{text_latest}
</text_latest>

### 历史情节概要
<text_summary>
{text_summary}
</text_summary>

## 整体规划

### 任务树
{task_list}

### 上层设计方案
<upper_design>
{upper_design}
</upper_design>

### 上层信息收集成果
<upper_search>
{upper_search}
</upper_search>
"""


###############################################################################


task_level_book = """
## 全书级别
1. 市场定位: 确定核心题材、目标读者、对标作品分析、核心卖点、差异化创新点。(必需)
2. 核心概念: 根据[市场定位], 确定一句话故事、核心吸引点、核心情感体验、世界观钩子、主角核心人设、核心设定/规则、核心悬念。(必需) 
3. 美学基调与设计准则: 根据[市场定位]与[核心概念], 确定故事的整体美学基调、核心意象、设计哲学与情感光谱, 作为所有后续创意决策的统一准则。(必需) 
4. 开篇设计: 根据[市场定位]、[核心概念]与[美学基调与设计准则], 设计黄金三章, 规划开篇钩子、核心卖点展示、主角首次亮相、初始冲突与快速入局策略。(必需) 
5. 书名与简介: 根据[市场定位]、[核心概念]与[美学基调与设计准则], 产出多个备选书名、长短版简介、核心关键词与标签。(必需) 
6. 主题内核: 根据[核心概念]与[美学基调与设计准则], 确定故事主题、核心价值观、普世情感、情感基调、主角核心成长弧光。(必需) 
7. 世界观: 根据[核心概念]与[主题内核], 确定基础规则、核心体系、社会结构、主要势力、关键历史地理、文化风俗、核心矛盾、设定揭示策略。(必需) 
8. 主角设计: 根据[主题内核]与[世界观], 确定主角背景、核心驱动力、长短期目标、性格特质与内在矛盾、读者代入点与角色魅力、核心能力/金手指、能力/心境/资源/声望的成长路线、关键弱点与代价。(必需) 
9. 角色关系与阵营: 根据[世界观]与[主角设计], 设计主角与关键配角、反派/对立势力的核心关系及动态演变。(必需) 
10. 核心冲突: 根据[世界观]、[主角设计]与[角色关系与阵营], 确定主线冲突、冲突根源与核心对立方、冲突的升级路径与关键转折点、冲突的终局解法。(必需) 
11. 爽点系统与成长体系: 根据[核心概念]、[主角设计]与[核心冲突], 设计驱动读者持续追读的核心反馈循环。规划爽点类型矩阵、核心爽点循环、成长反馈机制及其数值化或阶段化方案。(必需) 
12. 可扩展性与生命周期规划: 根据[世界观]、[主角设计]、[核心冲突]与[爽点系统与成长体系], 规划世界观、成长体系与核心矛盾的长期演化路径。设计设定升级的接口、成长天花板的突破机制, 并预留IP衍生潜力。(必需) 
13. 核心循环与阶段性演化: 根据[核心冲突]、[爽点系统与成长体系]与[可扩展性与生命周期规划], 规划故事核心驱动力的升级路径, 防止中后期重复。为故事划分宏观阶段, 并为各阶段设计不同的核心矛盾形态、爽点获取方式与情节循环模式, 规划阶段跃迁的关键事件。(必需) 
14. 情节架构: 根据[角色关系与阵营]、[核心冲突]、[爽点系统与成长体系]与[核心循环与阶段性演化], 确定全书整体结构、核心主线与关键支线、核心情节循环模式、重大情节节点、核心事件链与标志性事件/记忆锚点。(必需) 
15. 情绪节奏: 根据[情节架构], 规划核心情感曲线, 设计关键情绪的类型、强度、密度、分布节奏与爆发节点。(必需) 
16. 悬念与伏笔: 根据[情节架构], 设计悬念系统, 规划核心伏笔的埋设、强化、回收机制, 并设计鼓励读者猜测的开放式线索。(必需) 
17. 叙事节奏: 根据[情节架构]与[情绪节奏], 设定信息流与事件流的宏观节奏, 规划重大高潮分布与场景类型比例。(必需) 
18. 叙事风格: 根据[美学基调与设计准则]与[主题内核], 确定叙事视角、叙事时态、语言风格、文笔基调、核心叙事策略。(必需) 
19. 最终验证与风险预案: 根据[所有前期设计成果], 对整体设计进行一致性审查与压力测试, 并制定核心风险应对策略。(必需)
20. 全书结构规划: 根据[所有前期设计成果], 整合全书所有设计成果, 将[情节架构]、[角色弧光]、[世界观进展]等要素, 进行战略性分配。将全书划分为若干[卷/幕], 并为每[卷/幕]明确其核心使命, 包括: 承载的情节主线、核心冲突、角色弧光、世界观进展、情绪节奏、以及字数与结尾钩子。(必需)
"""

task_level_volume = """
## 卷级别
1. 本卷定位与目标: 确定本卷主题、核心矛盾、主角阶段性目标, 及其在全书核心循环演化中的承上启下作用。(必需)
2. 本卷风格与意象: 根据[本卷定位与目标], 确定本卷独特的氛围基调与核心意象, 确保其在全书核心美学框架下的具体呈现。(必需) 
3. 世界扩展与设定呈现: 根据[本卷定位与目标], 确定本卷引入的新场景、新势力、新设定, 并规划其揭示节奏与方式。(必需) 
4. 角色成长与关系演变: 根据[本卷定位与目标], 规划主角在本卷的能力/心境/资源/声望的具体成长目标, 引入的关键新角色, 以及核心角色关系的阶段性进展。(必需) 
5. 本卷核心冲突: 根据[本卷定位与目标]、[世界扩展与设定呈现]与[角色成长与关系演变], 细化本卷核心矛盾, 确定对立方的具体目标与行动纲领, 规划冲突从发生到解决的关键阶段。(必需) 
6. 伏笔回收与新悬念: 根据[本卷核心冲突]与[角色成长与关系演变], 规划本卷需回收的关键伏笔, 并设计驱动后续情节的核心新悬念/新目标。(必需) 
7. 本卷爽点设计: 根据[爽点系统与成长体系]、[本卷定位与目标]与[本卷核心冲突], 设计本卷特有的爽点模式或核心循环的变体, 确保其符合本卷主题与主角成长阶段。(必需) 
8. 情节骨架: 根据[本卷核心冲突]、[伏笔回收与新悬念]、[角色成长与关系演变]与[本卷爽点设计], 确定本卷主线情节的开篇、发展、中期转折、高潮、收尾等关键节点与事件链。(必需) 
9. 情绪节奏: 根据[情节骨架], 规划本卷情绪曲线, 设计关键情绪节点的具体分布, 并与情节高潮、转折对齐。(必需) 
10. 悬念与伏笔: 根据[情节骨架]与[伏笔回收与新悬念], 规划本卷核心悬念的埋设、强化与回收, 处理全书级伏笔的承接与推进。(必需) 
11. 叙事节奏: 根据[情节骨架]与[情绪节奏], 设定本卷整体信息披露速度与事件推进密度。规划场景类型比例, 服务于本卷节奏。(必需) 
12. 支线规划: 根据[情节骨架]、[世界扩展与设定呈现]与[角色成长与关系演变], 确定服务于主线、世界或角色的支线情节。(可选) 
13. 本卷验证与衔接: 根据[所有前期设计成果], 审查本卷设计的内部一致性, 并确保卷首与卷末能与前后文无缝衔接。(必需) 
14. 本卷结构规划: 根据[所有前期设计成果], 整合本卷所有设计成果,  将[情节骨架]、[角色成长]、[爽点事件]等要素, 进行战略性分配。将本卷划分为若干幕, 并为每幕明确其核心使命, 包括: 承载的核心事件链、角色成长节点、世界观揭示内容、核心爽点、情绪高潮、以及悬念伏笔与幕末钩子。(必需) 
"""

task_level_act = """
## 幕级别 (完整的情节单元)
1. 本幕目标与功能: 确定本幕主题、在卷中的功能、主角的阶段性目标、动机与后果。(必需)
2. 情节框架: 根据[本幕目标与功能], 确定本幕情节的起因、发展、转折、高潮、结局, 确保其服务于本幕目标。(必需) 
3. 角色状态与转变: 根据[本幕目标与功能], 确定主角及关键配角在本幕的初始状态、关键抉择、行动逻辑与最终状态转变。(必需) 
4. 核心冲突与对立: 根据[本幕目标与功能]与[角色状态与转变], 细化本幕核心冲突, 明确对立方的具体目标、行动与资源。(必需) 
5. 本幕氛围与呈现: 根据[本幕目标与功能], 确定本幕独特的氛围基调, 并规划用于强化该氛围的关键场景元素或感官细节。(必需) 
6. 风险与代价: 根据[核心冲突与对立]与[角色状态与转变], 明确主角在本幕中面临的具体风险、失败的代价, 以及成功的潜在收益。(必需) 
7. 本幕爽点交付: 根据[本卷爽点设计]、[核心冲突与对立]与[风险与代价], 规划本幕需要交付的具体爽点事件, 及其铺垫与爆发方式。(必需) 
8. 事件序列与高光: 根据[情节框架]、[核心冲突与对立]与[本幕爽点交付], 设计本幕的具体事件序列、因果关系, 并规划核心高光时刻/关键转折点。(必需) 
9. 主导叙事模式: 根据[本幕目标与功能]与[本幕氛围与呈现], 确定本幕的主导叙事模式, 以服务于本幕氛围与目标。(必需) 
10. 情绪节奏: 根据[事件序列与高光], 规划本幕情绪曲线, 设计关键情绪从铺垫、升级、爆发到释放的完整路径, 并与具体事件对齐。(必需) 
11. 信息管理与伏笔: 根据[事件序列与高光], 确定本幕关键信息的披露/隐藏节奏, 具体执行上级设计(卷级)中规划的伏笔回收与新悬念埋设。(必需) 
12. 叙事节奏: 根据[事件序列与高光]与[情绪节奏], 设定本幕具体情节推进速度与信息密度。调控场景张力, 组合不同场景类型以优化节奏。(必需) 
13. 幕末过渡与发射钩子: 根据[事件序列与高光], 设计本幕结尾的状态转换, 确保冲突的解决能直接触发下一幕的核心问题, 并留下强烈的追读悬念。(必需) 
14. 本幕验证: 根据[所有前期设计成果], 审查本幕设计的内部逻辑一致性, 确保其目标达成, 并能与前后幕流畅衔接。(必需) 
15. 本幕结构规划: 根据[所有前期设计成果], 整合本幕所有设计成果, 进行战略性分配。将本幕划分为若干章, 并为每章明确其核心使命, 包括: 承载的核心事件、角色关键转变、情绪交付、信息披露、以及情节功用与章末钩子。(必需) 
"""

task_level_chapter = """
## 章级别
1. 本章目标与功能: 确定本章在幕中的功能、单一核心事件与具体目标。(必需)
2. 微型情节框架: 根据[本章目标与功能], 确定本章“起因-经过-结果”的微型情节, 包含核心冲突、关键行动与即时反馈, 确保服务于本章目标。(必需) 
3. 角色呈现与行动: 根据[微型情节框架], 确定主角在本章的核心状态、关键行动/抉择, 以及需要高光展示的性格或能力点。(必需) 
4. 风险与回报: 根据[微型情节框架]与[角色呈现与行动], 明确本章核心行动的风险、代价与即时回报, 确保冲突有分量。(必需) 
5. 记忆锚点与高光时刻: 根据[微型情节框架]与[风险与回报], 规划本章最核心的、能被读者记住的标志性画面、动作或对白, 作为情绪爆发的核心载体。(必需) 
6. 核心情绪交付: 根据[记忆锚点与高光时刻], 确定本章核心情绪, 设计其即时的铺垫、爆发与收尾, 确保单章情绪闭环。(必需) 
7. 叙事节奏: 根据[微型情节框架]与[核心情绪交付], 设定本章内部情节推进速度与信息密度。具体安排场景类型的比例与顺序。(必需) 
8. 悬念与结尾钩子: 根据[微型情节框架], 确定本章信息披露节奏, 并在结尾设计强力钩子, 确保追读欲望。(必需) 
9. 本章验证: 根据[所有前期设计成果], 审查本章设计的内部逻辑, 确保目标达成, 并与前后章流畅衔接。(必需) 
10. 本章结构规划: 根据[所有前期设计成果], 整合本章所有设计成果, 进行战略性分配。将核心事件分解为若干场景, 并为每场景明确其核心使命, 包括: 承载的功能定位、核心冲突、角色行动、高光时刻、情绪节点、以及关键进展与场景衔接。(必需) 
"""

task_level_scene = """
## 场景级别
1. 场景目标与功能: 确定场景在本章中的功能、具体目标与预期结果, 确保服务于本章核心情绪。(必需)
2. 角色状态与目标: 根据[场景目标与功能], 确定核心参与角色的入场状态与预期的离场状态。(必需) 
3. 环境与感官呈现: 根据[场景目标与功能], 确定场景环境、氛围基调, 并规划用于强化氛围的关键感官细节。(必需) 
4. 标志性细节与呈现: 根据[场景目标与功能]与[环境与感官呈现], 规划场景中最具冲击力或代表性的感官细节, 或关键的“电影化”镜头, 以强化场景的记忆点和感染力。(必需) 
5. 核心冲突与博弈: 根据[场景目标与功能]与[角色状态与目标], 明确场景核心冲突, 以及参与角色之间的目标博弈与行动策略。(必需) 
6. 信息动态与揭示: 根据[核心冲突与博弈], 确定本场景要揭示/隐藏的关键信息, 及其对角色认知与行动的影响。(必需) 
7. 事件流程与互动: 根据[角色状态与目标]、[核心冲突与博弈]与[标志性细节与呈现], 确定核心事件流程, 以及角色行动、对话、心理活动与微表情。(必需) 
8. 节奏与张力: 根据[事件流程与互动], 确定场景内部节奏与张力的路径, 通过信息差或行动升级制造期待。(必需) 
9. 场景验证与衔接: 根据[所有前期设计成果], 审查场景设计的内部逻辑, 确保目标达成, 并通过明确的因果关系与下一场景衔接。(必需) 
10. 本场景结构规划: 根据[所有前期设计成果], 整合本场景所有设计成果, 进行战略性分配。将事件流程分解为若干节拍, 并为每节拍明确其核心使命, 包括: 承载的微观目标、核心互动、角色状态转变、关键信息揭示、以及动力衔接。(必需) 
"""

task_level_beat = """
## 节拍级别
1. 节拍目标与微观转变: 确定本节拍核心“动作-反应”单元的功能, 以及导致的微观状态转变。(必需)
2. 关键呈现与读者即时体验: 根据[节拍目标与微观转变], 确定用于呈现状态转变的关键动作、对话、感官细节或微表情, 并规划其旨在引发的读者即时情绪。(必需) 
3. 微观冲突与张力: 根据[节拍目标与微观转变], 明确本节拍内部的微观冲突来源, 以及如何通过潜台词、内心活动或外部阻碍制造张力。(必需) 
4. 叙事载体选择: 根据[节拍目标与微观转变]与[关键呈现与读者即时体验], 确定本节拍主要通过何种叙事载体呈现, 以服务于其目标与情绪。(必需) 
5. 信息流与揭示: 根据[节拍目标与微观转变]与[微观冲突与张力], 确定本节拍要传递的核心信息, 以及其披露的时机与方式。(必需) 
6. 结果与动力衔接: 根据[节拍目标与微观转变]与[微观冲突与张力], 明确本节拍的直接结果, 并通过因果链或微小悬念与下一节拍衔接, 确保动力不中断。(必需) 
7. 节拍验证与自检: 根据[所有前期设计成果], 审查本节拍设计的内部逻辑, 确保目标达成, 并与前后节拍流畅衔接。(必需) 
8. 本节拍结构规划: 根据[所有前期设计成果], 整合本节拍所有设计成果, 进行战略性分配。将“动作-反应”单元分解为若干段落, 并为每段落明确其核心使命, 包括: 承载的核心功能、关键信息、以及行文节奏与段落衔接。(必需) 
"""

task_level_paragraph = """
## 段落级别
1. 段落功能与信息: 确定段落核心功能、关键信息与核心情感。(必需)
2. 节奏、风格与感官冲击: 根据[段落功能与信息], 确定句式、结构、用词与节奏, 并规划关键感官细节, 以匹配段落功能和读者情绪。(必需) 
3. 核心意象与修辞: 根据[段落功能与信息]与[节奏、风格与感官冲击], 确定关键意象、修辞手法, 以增强文字表现力。(可选) 
4. 动态与反馈: 根据[段落功能与信息], 确定段落结尾, 明确与下一个行动建立因果链, 或者制造钩子和悬念, 确保读者正反馈与动力链。(必需) 
"""

def get_task_level(hierarchical_position: str) -> Dict[str, Any]:
	ret = {
		"task_level": task_level_book
    }
	level_map = {
		"段落": task_level_paragraph,
		"节拍": task_level_beat,
		"场景": task_level_scene,
		"章": task_level_chapter,
		"幕": task_level_act,
		"卷": task_level_volume,
		"全书": task_level_book,
		"顶层": task_level_book,
	}
	for keyword, task_level in level_map.items():
		if keyword in hierarchical_position:
			ret["task_level"] = task_level
			break
	return ret


###############################################################################

# for test

test_task_level_book = """
## 全书级别
- 核心概念: 确定一句话故事、核心吸引点、核心情感体验、世界观钩子、主角核心人设、核心设定/规则、核心悬念。(必需) 
- 开篇设计: 根据[核心概念]与[主角设计], 设计黄金三章, 规划开篇钩子、核心卖点展示、主角首次亮相、初始冲突与快速入局策略。(必需) 
- 世界观: 根据[核心概念], 确定基础规则、核心体系、社会结构、主要势力、关键历史地理、文化风俗、核心矛盾、设定揭示策略。(必需) 
- 主角设计: 根据[核心概念]与[世界观], 确定主角背景、核心驱动力、长短期目标、性格特质与内在矛盾、读者代入点与角色魅力、核心能力/金手指、能力/心境/资源/声望的成长路线、关键弱点与代价。(必需) 
- 角色关系与阵营: 根据[主角设计]与[世界观], 设计主角与关键配角、反派/对立势力的核心关系及动态演变。(必需) 
- 情节架构: 根据[主角设计]、[角色关系与阵营]与[世界观], 确定全书整体结构、核心主线与关键支线、核心情节循环模式、重大情节节点、核心事件链与标志性事件/记忆锚点。(必需) 
- 叙事风格: 根据[核心概念], 确定叙事视角、叙事时态、语言风格、文笔基调、核心叙事策略。(必需) 
- 全书结构规划: 根据[情节架构], 整合全书所有设计成果, 将[情节架构]、[角色弧光]、[世界观进展]等要素, 进行战略性分配。将全书划分为若干[卷/幕], 并为每[卷/幕]明确其核心使命, 包括: 承载的情节主线、核心冲突、角色弧光、世界观进展、情绪节奏、以及字数与结尾钩子。(必需)
"""

test_task_level_volume = """
## 卷级别
- 本卷定位与目标: 确定本卷主题、核心矛盾、主角阶段性目标, 及其在全书核心循环演化中的承上启下作用。(必需)
- 世界扩展与设定呈现: 根据[本卷定位与目标], 确定本卷引入的新场景、新势力、新设定, 并规划其揭示节奏与方式。(必需) 
- 角色成长与关系演变: 根据[本卷定位与目标], 规划主角在本卷的能力/心境/资源/声望的具体成长目标, 引入的关键新角色, 以及核心角色关系的阶段性进展。(必需) 
- 本卷核心冲突: 根据[本卷定位与目标]、[世界扩展与设定呈现]、[角色成长与关系演变], 细化本卷核心矛盾, 确定对立方的具体目标与行动纲领, 规划冲突从发生到解决的关键阶段。(必需) 
- 情节骨架: 根据[本卷核心冲突]、[角色成长与关系演变], 确定本卷主线情节的开篇、发展、中期转折、高潮、收尾等关键节点与事件链。(必需) 
- 支线规划: 根据[情节骨架]、[世界扩展与设定呈现]、[角色成长与关系演变], 确定服务于主线、世界或角色的支线情节。(可选) 
- 本卷结构规划: 根据[所有前期设计成果], 整合本卷所有设计成果,  将[情节骨架]、[角色成长]、[爽点事件]等要素, 进行战略性分配。将本卷划分为若干幕, 并为每幕明确其核心使命, 包括: 承载的核心事件链、角色成长节点、世界观揭示内容、核心爽点、情绪高潮、以及悬念伏笔与幕末钩子。(必需) 
"""

test_task_level_act = """
## 幕级别 (完整的情节单元)
- 本幕目标与功能: 确定本幕主题、在卷中的功能、主角的阶段性目标、动机与后果。(必需)
- 情节框架: 根据[本幕目标与功能], 确定本幕情节的起因、发展、转折、高潮、结局, 确保其服务于本幕目标。(必需) 
- 角色状态与转变: 根据[本幕目标与功能]与[情节框架], 确定主角及关键配角在本幕的初始状态、关键抉择、行动逻辑与最终状态转变。(必需) 
- 本幕结构规划: 根据[情节框架]与[角色状态与转变], 整合本幕所有设计成果, 进行战略性分配。将本幕划分为若干章, 并为每章明确其核心使命, 包括: 承载的核心事件、角色关键转变、情绪交付、信息披露、以及情节功用与章末钩子。(必需) 
"""

test_task_level_chapter = """
## 章级别
- 本章目标与功能: 确定本章在幕中的功能、单一核心事件与具体目标。(必需)
- 微型情节框架: 根据[本章目标与功能], 确定本章“起因-经过-结果”的微型情节, 包含核心冲突、关键行动与即时反馈, 确保服务于本章目标。(必需) 
- 角色呈现与行动: 根据[微型情节框架], 确定主角在本章的核心状态、关键行动/抉择, 以及需要高光展示的性格或能力点。(必需) 
- 本章结构规划: 根据[微型情节框架]与[角色呈现与行动], 整合本章所有设计成果, 进行战略性分配。将核心事件分解为若干场景, 并为每场景明确其核心使命, 包括: 承载的功能定位、核心冲突、角色行动、高光时刻、情绪节点、以及关键进展与场景衔接。(必需) 
"""

test_task_level_scene = """
## 场景级别
- 场景目标与功能: 确定场景在本章中的功能、具体目标与预期结果, 确保服务于本章核心情绪。(必需)
- 角色状态与目标: 根据[场景目标与功能], 确定核心参与角色的入场状态与预期的离场状态。(必需) 
- 事件流程与互动: 根据[场景目标与功能]、[角色状态与目标], 确定核心事件流程, 以及角色行动、对话、心理活动与微表情。(必需) 
- 本场景结构规划: 根据[场景目标与功能]、[角色状态与目标]、[事件流程与互动], 整合本场景所有设计成果, 进行战略性分配。将事件流程分解为若干节拍, 并为每节拍明确其核心使命, 包括: 承载的微观目标、核心互动、角色状态转变、关键信息揭示、以及动力衔接。(必需) 
"""

test_task_level_beat = """
## 节拍级别
- 节拍目标与微观转变: 确定本节拍核心“动作-反应”单元的功能, 以及导致的微观状态转变。(必需)
- 关键呈现与读者即时体验: 根据[节拍目标与微观转变], 确定用于呈现状态转变的关键动作、对话、感官细节或微表情, 并规划其旨在引发的读者即时情绪。(必需) 
- 本节拍结构规划: 根据[节拍目标与微观转变]与[关键呈现与读者即时体验], 整合本节拍所有设计成果, 进行战略性分配。将“动作-反应”单元分解为若干段落, 并为每段落明确其核心使命, 包括: 承载的核心功能、关键信息、以及行文节奏与段落衔接。(必需) 
"""

test_task_level_paragraph = """
## 段落级别
- 段落功能与信息: 确定段落核心功能、关键信息与核心情感。(必需)
- 动态与反馈: 根据[段落功能与信息], 确定段落结尾, 明确与下一个行动建立因果链, 或者制造钩子和悬念, 确保读者正反馈与动力链。(必需) 
"""

def test_get_task_level(hierarchical_position: str) -> Dict[str, Any]:
	ret = {
		"task_level": test_task_level_book
    }
	level_map = {
		"段落": test_task_level_paragraph,
		"节拍": test_task_level_beat,
		"场景": test_task_level_scene,
		"章": test_task_level_chapter,
		"幕": test_task_level_act,
		"卷": test_task_level_volume,
		"全书": test_task_level_book,
		"顶层": task_level_book,
	}
	for keyword, task_level in level_map.items():
		if keyword in hierarchical_position:
			ret["task_level"] = task_level
			break
	return ret
