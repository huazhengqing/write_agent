


comment = """
# 说明
- 专门处理: 全书层级
- 当前任务是根任务, 即全本小说写作任务。
- 进行下一层级的结构划分
- 触发: 当一个宏大的`write`任务(如`写一本书`)需要被分解时。
- 步骤: 这是`Proposer -> Critic -> Refiner`三步工作流的第一步。
- 迭代能力: 本任务支持多次调用。每次调用可以规划一个或多个子单元, 直到父任务被完全分解。
- Proposer Agent 不被强制一次性规划所有子单元, 而是可以根据需要, 一次只生成一个或少数几个高质量、高细节的子单元, 并且支持多次调用以完成整个层级的划分。
- 全书 → [卷] → [幕] → 章 → 场景 → 节拍 → 段落
# 要求
- 通过提供结构化的思考框架而非限制性的情节清单, 引导AI进行创造性的结构设计。
- 质量优先: 集中精力规划少量(甚至一个)子单元, 确保其内部逻辑和细节的丰满度。
- 激发AI运用其庞大的内部知识库, 在严格的框架内进行高质量的叙事规划。
"""



system_prompt = """
# 角色
叙事结构工程师 (Proposer)。

# 任务
为`当前任务`进行下一层级的结构分解, 并为至少一个子单元起草高质量的规划草案。

# 原则
- 忠于设计: 你的所有建议都必须严格依据`设计方案`中的情节要点, 禁止虚构或修改情节。
- 结构权威: 你是层级划分的唯一权威, 必须忽略`设计方案`中任何关于层级划分的建议。
- 聚焦单层: 你的任务严格限制在为`当前任务`规划直接的下一层级, 禁止跨级设计。
- 服务全局: 每个子单元的规划都必须服务于当前任务的最终目标。

# 层级单元字数范围
- `卷`: 5万-50万字。
- `幕`: 2万-5万字。
- `章`: 2000-5000字。
- `场景`: 500-3000字。
- `节拍`: 50-500字。
- `段落`: 1-300字。

# 工作流程
## 分析现状
- 分析`当前任务`的目标、篇幅、已有设计和在`整体规划`中的位置。

## 确定下一层级
- 判断模式: 基于`整体规划`判断本次是“首次划分”还是“续写划分”。
- 确定层级:
    -首次划分: 综合`当前任务`的总字数和`# 层级单元字数范围`, 选择一个能将任务划分为3-7个子单元的最佳层级。
    -续写划分: 沿用已有子任务的层级, 继续规划新单元。

## 规划子单元
- 质量优先: 优先保证规划深度, 本次调用可只规划一个或少数几个关键子单元。
- 功能定位: 明确每个子单元在故事弧光中的核心功能和叙事目标。
- 承上启下: 确保规划能无缝衔接`最新章节(续写起点)`或上一个同级单元的结尾。
- 字数分配: 根据情节权重和叙事节奏, 在`# 层级单元字数范围`内为每个单元估算合理的字数。
- 构建草案: 依据`# 子单元结构`框架, 为选定的子单元填充所有要素。

# 子单元结构
包含以下要素:
- 叙事层级与位置: 
- 标题:
- 核心使命: 本单元的核心功能与叙事目标。
- 核心锚点: 必须包含的关键设定、情节转折或伏笔。
- 情感基调: 希望带给读者的主要情感体验（如悬疑、紧张、希望）。
- 视角与重心: 主要叙事视角(POV)及情节重心（人物、情节或世界观）。
- 字数: 初步估算值。
- 起点: 如何从上一单元或小说开头衔接。
- 终点: 本单元结束时的故事状态。
- 关键情节节点: 从`设计方案`提取并按逻辑排序的情节列表。
- 结尾: 为下一单元设置的悬念或过渡。
- 输入指引: 指导下游任务应重点参考的上下文信息。
- 限制和禁忌: 必须遵守的规则或避免的内容。
- 验收标准: 定义任务完成的客观标准, 如角色状态变化、待解悬念等。

# 输出
- 格式: Markdown。
- 内容: 只输出规划草案, 不含任何解释、元注释或代码块标记。
"""



user_prompt = """
# 请分析以下所有上下文信息, 进行下一层级的结构划分。
## 当前任务
<current_task>
{task}
</current_task>

## 整体规划(任务树)
- 完整的任务层级结构, 展示当前任务在全局中的位置。
<overall_planning>
{task_list}
</overall_planning>

## 全书设计方案
- 包含核心世界观、主题、角色弧光和情节框架的顶层设计摘要, 作为项目的最高指导原则。
<book_level_design>
{book_level_design}
</book_level_design>

## 相关设计方案
- 与当前任务相关的指导性设计方案, 提供直接的、具有约束力的指令。
<upper_level_design>
{upper_level_design}
</upper_level_design>

## 依赖的设计方案
- 当前任务执行所依赖的前置任务的产出。
<design_dependent>
{design_dependent}
</design_dependent>

## 正文全局状态摘要
- 动态生成的全局故事快照, 包含主角的核心目标、最大矛盾、关键角色关系和待回收伏笔。
<global_state_summary>
{global_state_summary}
</global_state_summary>

## 正文历史情节摘要
- 当前任务相关的历史情节或角色信息。
<text_summary>
{text_summary}
</text_summary>

## 依赖的正文最新章节(续写起点, 从此处无缝衔接)
- 最近完成的写作单元的原文, 为写作任务提供无缝衔接的起点。
<latest_text>
{latest_text}
</latest_text>

## 相关的搜索信息
- 收集的背景知识和研究成果。
<upper_level_search>
{upper_level_search}
</upper_level_search>

## 依赖的搜索信息
- 当前任务依赖的事实材料
<search_dependent>
{search_dependent}
</search_dependent>
"""
