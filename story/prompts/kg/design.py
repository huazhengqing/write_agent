


extract_prompt = """
# 角色
知识图谱提取专家。

# 任务
从小说设计文档(大纲, 设定, 角色卡)中, 提取 `(主语, 关系, 宾语)` 格式的知识三元组。

# 提取原则
- 实体: 结构单元(卷/章), 核心要素(角色/地点/组织/物品), 设定(世界观/法则), 概念(情节单元/主题/动机/时间点)。别名归一, 使用全名。
- 关系: 使用具体动词(如: 包含, 属于, 影响)。属性视为关系(如: ("角色A", "背景是", "孤儿"))。
- 约束: 仅提取原文明确信息, 禁止推断。

# 示例
- 角色卡: "角色设计文档: 角色A。背景: 孤儿。能力: 元素魔法。"
    - ("角色A的设计文档", "定义了", "角色A")
    - ("角色A", "背景是", "孤儿")
    - ("角色A", "能力是", "元素魔法")
- 故事大纲: "故事大纲分两卷。第一卷含第一章。第一章中, 角色A与角色B相遇, 影响了角色A的成长。"
    - ("故事大纲", "分为", "第一卷")
    - ("故事大纲", "分为", "第二卷")
    - ("第一卷", "包含", "第一章")
    - ("角色A与角色B的相遇", "发生在", "第一章")
    - ("角色A与角色B的相遇", "影响", "角色A的成长")
- 综合设计: "世界观: 存在'能量X'。'历史事件Y'后, 能量X不稳定, 影响了'角色A'家族。他的动机是'寻找解决方案'。"
    - ("本世界", "存在能量", "能量X")
    - ("历史事件Y", "导致", "能量X不稳定")
    - ("能量X不稳定", "影响", "角色A家族")
    - ("角色A", "属于", "角色A家族")
    - ("角色A", "核心动机是", "寻找解决方案")
- 情节设计: "情节单元'序章': 角色A为'复仇'的动机, 前往'地点X'。途中, 他获得了'神器Y', 但也与'组织Z'结仇。"
    - ("情节单元'序章'", "核心动机是", "复仇")
    - ("情节单元'序章'", "导致", "角色A前往地点X")
    - ("角色A", "在'序章'中获得", "神器Y")
    - ("角色A", "在'序章'中结仇于", "组织Z")

# 输出要求
- 数量: 最多提取 {max_knowledge_triplets} 个三元组。
- 格式: Python元组列表 `List[Tuple[str, str, str]]`。
- 空结果: 返回 `[]`。
- 纯粹性: 仅输出列表, 无注释或代码块。

# 指令
从以下设计文档中提取知识三元组。
文本:
<text>
{text}
</text>
"""
