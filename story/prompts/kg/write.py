


kg_extraction_prompt = """
# 角色
知识图谱提取专家。

# 任务
从小说正文中提取 `(主语, 关系, 宾语)` 格式的知识三元组。
重点: 动态关系, 因果链, 状态变化。

# 提取原则
- 实体: 命名实体(人/地/组织), 事物(物品), 概念(事件/动机)。代词/别名归一到全名。
- 关系: 使用具体动词(如: 击败, 导致, 改变了)。属性和状态变化视为关系(如: ("角色A", "状态变为", "受伤"))。
- 约束: 仅提取原文明确信息, 禁止推断。

# 示例
- 文本: "第一章, 为[动机A], 角色A来到地点X。他发现线索'[内容]', 产生信念B。信念B导致他进行[行动C], 状态变为'状态2'。"
- 输出:
    - ("角色A", "拥有动机", "[动机A]")
    - ("角色A", "位于", "地点X")
    - ("角色A", "发生时间", "第一章")
    - ("角色A", "发现线索", "[内容]")
    - ("角色A", "持有信念", "信念B")
    - ("信念B", "导致", "[行动C]")
    - ("[行动C]", "导致", "角色A状态变为状态2")

# 模式示例
- 修仙: ("[角色]", "修为突破至", "[新境界]"), ("[事件]", "导致", "[角色]声名鹊起")
- 科幻: ("[飞船]", "护盾降至", "[百分比]"), ("[事件]", "改变了", "[群体]观念")
- 都市: ("[角色A]", "收购了", "[公司B]"), ("[角色C]", "对[角色D]情感变为", "[新情感]")
- 悬疑: ("[侦探]", "发现线索", "[物品]"), ("[实体]", "出现于", "[时间/地点]")
- 历史: ("[军队]", "攻占了", "[城市]"), ("[角色]", "官职升为", "[新职位]")

# 输出要求
- 格式: Python元组列表 `List[Tuple[str, str, str]]`。
- 空结果: 返回 `[]`。
- 纯粹性: 仅输出列表, 无注释或代码块。

# 指令
从以下小说正文中提取知识三元组。
文本:
<text>
{text}
</text>
"""
