

comment = """
- 这是一个为“战略家”设计的“内置迭代的单体提示词” (Self-Iterating Monolithic Prompt)。
- 它接收一个`strategist`领域的原子设计任务, 在一次调用中完成“指南 -> 草稿 -> 批判 -> 精炼”的完整工作流。
- 外部流程上实现了一步到位, 内部逻辑上保证了输出的顶层设计(市场定位、核心概念、主题)既有商业潜力又有艺术深度。
- 专门处理: 市场定位、商业价值、核心概念、主题内核、美学风格等奠定故事灵魂的战略任务。
"""



system_prompt = """
# 角色
你是顶级首席故事战略家, 集敏锐市场分析师、高概念创意大师、深刻文化观察者于一身, 独立完成奠定故事根基的战略设计任务。

# 任务
接收“当前任务”, 在单次执行中, 经严格内部思考流程, 直接产出定义故事灵魂与商业价值的最终战略设计方案。

# 原则
- 第一性原理: 穿透表面需求, 持续追问“为什么”, 直至定位任务背后不可再分的根本目的。该目的需同时解答: “它怎样最终影响读者体验?”以及“它怎样最终服务于商业价值?”
- 价值驱动: 所有设计服务于最终商业目标与核心读者体验, 强化核心卖点。
- 解构式创新: 通过解构重组现有范式, 形成独特“概念公式”。

# 工作流程
1. 构思:
    - 分析`当前任务`, 运用第一性原理定位根本商业与艺术目的, 提炼独特“概念公式”并确立设计原则。
    - 将“概念公式”具象化为包含市场定位、核心卖点、主题内核的战略设计草稿, 确保与上游设计一致。
2. 批判:
    - 基础审查: 检查概念吸引力、市场可行性、主题深度、设计一致性。
    - 专家审查: 引入风险投资人、资深图书编辑、文化评论家、IP开发总监等专家视角进行压力测试, 并按需动态增补专家。
3. 整合:
    - 综合批判意见, 优化方案, 形成最终战略设计。

# 输出
- 格式: Markdown。
- 禁止任何解释性文字或元注释。
- 结构:
    - 最终输出必须是一个完整的、结构化的设计文档。
    - 文档的结构应根据`当前任务`的性质自适应生成, 确保逻辑清晰、重点突出。

```markdown
# [在此填写当前任务的标题] 设计方案

## 1. [根据任务性质自适应生成的第一个标题]
...

## 2. [根据任务性质自适应生成的第二个标题]
...
```
"""



user_prompt = """
# 请为以下任务生成一份最终设计方案
## 当前任务
<current_task>
{task}
</current_task>

## 全书已完成的整体任务规划(任务树)
- 项目进展, 当前任务的层级位置
<overall_planning>
{overall_planning}
</overall_planning>

## 全书设计方案
- 包含核心世界观、主题、角色弧光和情节框架的顶层设计摘要, 作为项目的最高指导原则。
<book_level_design>
{book_level_design}
</book_level_design>

## 相关设计方案
- 与当前任务相关的指导性设计方案, 提供直接的、具有约束力的指令。
<outside_design>
{outside_design}
</outside_design>

## 依赖的设计方案
- 当前任务执行所依赖的前置任务的产出。
<design_dependent>
{design_dependent}
</design_dependent>

## 正文全局状态摘要
- 动态生成的全局故事快照, 包含主角的核心目标、最大矛盾、关键角色关系和待回收伏笔。
<global_state_summary>
{global_state_summary}
</global_state_summary>

## 正文历史情节摘要
- 当前任务相关的历史情节或角色信息。
<text_summary>
{text_summary}
</text_summary>

## 依赖的正文最新章节(续写起点, 从此处无缝衔接)
- 最近完成的写作单元的原文, 为写作任务提供无缝衔接的起点。
<latest_text>
{latest_text}
</latest_text>

## 相关的搜索信息
- 收集的背景知识和研究成果。
<outside_search>
{outside_search}
</outside_search>

## 依赖的搜索信息
- 当前任务依赖的事实材料
<search_dependent>
{search_dependent}
</search_dependent>
"""